# Generated by Django 5.1.2 on 2024-10-15 16:01

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SyncLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_type', models.CharField(max_length=50)),
                ('sync_status', models.CharField(choices=[('Success', 'Success'), ('Failure', 'Failure')], max_length=50)),
                ('sync_message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TotalProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.JSONField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('barcode', models.CharField(max_length=13, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserJobType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(choices=[('Wholesaler', 'Wholesaler'), ('buyer', 'Buyer'), ('customer', 'Customer'), ('manager', 'Manager')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('job_wholesaler', models.BooleanField(default=False)),
                ('job_buyer', models.BooleanField(default=False)),
                ('affiliation_type', models.CharField(blank=True, max_length=50, null=True)),
                ('affiliation_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('company_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('company_address', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('kakao_id', models.CharField(blank=True, max_length=100, null=True)),
                ('services', models.TextField(blank=True, null=True)),
                ('business_registration_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('business_registration_certificate', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('bank_account', models.CharField(blank=True, max_length=100, null=True)),
                ('manager_name', models.CharField(blank=True, max_length=100, null=True)),
                ('manager_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('area_possible', models.CharField(blank=True, max_length=255, null=True)),
                ('purchase_products', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('close', 'Close'), ('rest', 'Rest'), ('closed_days', 'Closed Days')], default='open', max_length=50)),
                ('approve_status', models.CharField(choices=[('approve', 'Approve'), ('reject', 'Reject'), ('hold', 'Hold')], default='pending', max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='buyer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('kakao_id', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('cart_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='SomeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_data', models.JSONField()),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('updated', 'Updated')], default='new', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.totalproducts')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(blank=True, max_length=13, null=True)),
                ('gtin', models.CharField(blank=True, max_length=14, null=True)),
                ('gpc_code', models.CharField(blank=True, max_length=20, null=True)),
                ('food_industry_code', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.totalproducts')),
            ],
        ),
        migrations.CreateModel(
            name='ValidationLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validation_status', models.CharField(choices=[('Valid', 'Valid'), ('Invalid', 'Invalid')], max_length=50)),
                ('validation_message', models.TextField()),
                ('validated_at', models.DateTimeField(auto_now_add=True)),
                ('product_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.productcodes')),
            ],
        ),
        migrations.CreateModel(
            name='Wholesaler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, unique=True)),
                ('company_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('company_address', models.CharField(blank=True, max_length=255, null=True)),
                ('business_registration_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('business_registration_certificate', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('bank_account', models.CharField(blank=True, max_length=100, null=True)),
                ('manager_name', models.CharField(blank=True, max_length=100, null=True)),
                ('manager_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('area', models.CharField(blank=True, max_length=255, null=True)),
                ('reliability_score', models.IntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('close', 'Close'), ('rest', 'Rest'), ('closed_days', 'Closed Days')], default='close', max_length=50)),
                ('approve_status', models.CharField(choices=[('approve', 'Approve'), ('reject', 'Reject'), ('hold', 'Hold')], default='pending', max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wholesaler', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SaleProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_status', models.CharField(choices=[('new', 'New'), ('updated', 'Updated')], default='new', max_length=50)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.products')),
                ('wholesaler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.wholesaler')),
            ],
        ),
        migrations.CreateModel(
            name='Quotations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('details', models.JSONField()),
                ('status', models.CharField(choices=[('received', 'Received'), ('selected', 'Selected'), ('purchase_request', 'Purchase Request'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='received', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='management.buyer')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='management.customer')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.wholesaler')),
            ],
        ),
        migrations.AddField(
            model_name='products',
            name='wholesaler',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.wholesaler'),
        ),
        migrations.AddConstraint(
            model_name='productcodes',
            constraint=models.UniqueConstraint(fields=('barcode', 'gtin', 'gpc_code', 'food_industry_code'), name='unique_product_code_combination'),
        ),
        migrations.AddConstraint(
            model_name='saleproducts',
            constraint=models.UniqueConstraint(fields=('wholesaler', 'product'), name='unique_wholesaler_product'),
        ),
        migrations.AddConstraint(
            model_name='products',
            constraint=models.UniqueConstraint(fields=('total_product', 'wholesaler'), name='unique_total_product_wholesaler'),
        ),
    ]
